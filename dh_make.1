.TH DH_MAKE 8 "7 March 2006" "Debian Project" \" -*- nroff -*-
.SH NAME
dh_make \- Debianize a regular source archive
.SH SYNOPSIS
.B dh_make
[\-nlsmiadh] [\-c license] [\-e address] [\-f file] [\-t directory]
[\-o directory] [\-p name] [\-\-copyright license]
[\-\-email address] [\-\-native] [\-\-file file]
[\-\-library] [\-\-single] [\-\-multi] [\-\-kmod] [\-\-addmissing]
[\-\-templates directory] [\-\-defaultless] [\-\-overlay directory]
[\-\-packagename name]
[--help] [--version]
.SH DESCRIPTION
.B dh_make
is a tool to convert a regular source code package into one formatted
according to the requirements of the Debian Policy.
.B dh_make
must be invoked within a directory containing the source code, which must
be named <packagename>-<version>. The <packagename> must be all lowercase,
digits and dashes. If the directory name does not conform to this scheme,
you must rename it before using 
.B dh_make.
Alternatively, you may be able to use the \-\-packagename option to force 
the package name.
.br
.SH PACKAGE CLASSES
.TP
.B Single binary (s)
The package will generate a single binary .deb package. It is the standard
case, so if you don't know what to do, choose this.
.TP
.B Multiple binary (m)
The package will generate multiple binary .deb packages from one source
package. Choose this for larger packages that need to be split.
.TP
.B Library (l)
The package will generate at least two binaries. One library package
containing just the lib in /usr/lib and another *-dev_*.deb package
containing documentation and C headers.
.TP
.B Kernel module (k)
The package will generate a binary-all kernel module -source package for
use with the make-kpkg command. It also generates a binary package for
additional utilities, daemons, etc. that may come with the source.
.TP
.B cdbs (b)
The package will be build using the Common Debian Build System.
CDBS provides a sane set of default rules upon which packages can build.
.SH ACTIONS PERFORMED
Unless \-\-native was given, 
.B dh_make
makes sure a original source archive (<packagename>\-<version>.orig.tar.gz)
exists.
If no such file exists, the file specified with \-f is copied in place.
If no \-f is supplied either but \-\-createorig is, the current directory
it copied into <packagename>\-<version>.orig which will be made to this
archive by dpkg\-source later automatically.
The original archive is needed for other Debian tools to generate the
diffs to the original sources required by the Debian packaging format.
Unless there are reasons against it this file should be the pristine
upstream archive.
.PP
Then
.B dh_make
proceeds to generate a "debian" subdirectory and the necessary control
files in the program source directory. Those control files are customized
with the packagename and version extracted from the directory name. The
username is looked up in the environment variable
.B $DEBFULLNAME
if this exists.  If not the environment variable
.B $LOGNAME
is used to find a name in the /etc/passwd file, and through NIS, YP and LDAP.
The e-mail address is found in the environment and /etc/mailname.
. If the environment variable
.B $EMAIL
or
.B $DEBEMAIL
is set, or the -e (--email) option is supplied, then that e-mail address
is used for the e-mail address of the maintainer (instead of looking it
up in the environment. An example, for bash:
.PP
export DEBEMAIL="jsmith@debian.org"
.PP
.B dh_make
will also generate example files that are also customized for the package
generated. You can remove all files with *.ex if you wish. You can also
delete the README.Debian file if you don't have anything to put in it.
Renaming the example files to their name without the .ex at the end (and
editing them if necessary) will activate that feature of debhelper.
.PP
If the --templates or -o (--overlay) option is used
.B dh_make
will apply a customizing template to the "debian" directory. See the
templates described in the FILES section of this manpage for samples.
.SH OPTIONS
.TP
.I -c, --copyright <license>
Use <license> type in copyright file.  <license> can be gpl, lgpl, artistic
or bsd.  If this field is not specified the copyright file has a space to
fill in which sort of license is used. The field is case-insensitive so
-c GPL works as well as -c gpl.
.TP
.I -e, --email <address>
Use <address> as the e-mail address in the Maintainer: field of
debian/control file.
.TP
.I -n, --native
Create a native Debian packages, i.e. do not generate a .orig archive, 
since it will be generated when building with dpkg-buildpackage.
The version number will not have a Debian revision number (e.g. -1)
appended to it.
.TP
.I -f, --file <file>
Use <file> as the original source archive, and skip the copying of the
current program tree to program.orig.
.TP
.I -l, --library
Automatically set the package class to Library, skipping the question.
.TP
.I -s, --single
Automatically set the package class to Single binary, skipping the question.
.TP
.I -m, --multi
Automatically set the package class to Multiple binary, skipping the question.
.TP
.I -k, --kmod
Automatically set the package class to Kernel module, skipping the question.
.TP
.I -b, --cdbs
Automatically set package class to cdbs, skipping the question.
.TP
.I -a, --addmissing
Adds missing example and control files on an existing debian source directory.
.TP
.I -t, --templates <directory>
Applies the customizing templates in <directory> to the debian directory.
.TP
.I -o, --overlay <directory>
Applies a customization template to an existing debian directory.
.TP
.I -p, --packagename <name>
Force the package name to be <name>, good for packages with hyphens in their
name or other strangeness.
.TP
.I -d, --defaultless
Skips applying the default templates to the target debian directory.
.TP
.I -h, --help
Display the name, version, available options and authors, and exit
successfully.
.TP
.I -v, --version
Show the program name and version, and exit successfully.
.SH FILES
.TP
.I /usr/share/debhelper/dh_make
Directory that contains all the template files, separated in six
directories: 
.B debian/
with files for all package classes,
.B debians/
with files specific to the Single binary class,
.B debianm/
with files specific to the Multiple binary class,
.B debianl/
with files specific to the Library class, and finally,
.B native/
with files specific to the native Debian packages.
.B licenses/
template files for the more common licenses used in Debian packages
.SH SEE ALSO
.BR "dpkg(1), dpkg-buildpackage(1), debhelper(1), make-kpkg(1), debhelper(7)"
.P
You may also want to read the Debian Policy (in /usr/share/doc/debian-policy)
and the New Maintainers' Guide (in /usr/share/doc/maint-guide).
.SH AUTHORS
Christoph Lameter <clameter@debian.org> wrote the original script, in sh.
.br
Craig Small <csmall@debian.org> made many enhancements to the script, and
later rewrote it in perl.
.br
Bruce Sass <bsass@edmc.net> added support for customization templates.
